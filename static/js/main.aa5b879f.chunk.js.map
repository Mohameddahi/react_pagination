{"version":3,"sources":["utils.ts","components/SetpButton/SetpButton.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Direction","StepButton","direction","currentPage","pages","onPageChange","useState","prev","setPrev","next","setNext","useEffect","edgePages","length","isAnEdgePage","page","button","className","classNames","disabled","href","onClick","Pagination","total","itemsPerPage","Math","ceil","Prev","map","active","Next","items","App","setItemsPerPage","setCurrentPage","itemsToDisplay","slice","visibleItems","setVisibleItems","totalItems","startItem","endItem","min","newItems","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa5b879f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\n\nenum Direction {\n  Prev = 'prev',\n  Next = 'next',\n}\n\ninterface Props {\n  direction: Direction\n  currentPage: number,\n  pages: number[],\n  onPageChange: (page: number) => void,\n\n}\n\nexport const StepButton: React.FC<Props> = ({\n  direction,\n  currentPage,\n  pages,\n  onPageChange,\n}) => {\n  const [prev, setPrev] = useState(currentPage - 1);\n  const [next, setNext] = useState(currentPage + 1);\n\n  useEffect(() => {\n    setNext(currentPage + 1);\n    setPrev(currentPage - 1);\n  }, [currentPage]);\n\n  const edgePages = { prev: 1, next: pages.length };\n  const isAnEdgePage = currentPage === edgePages[direction];\n\n  const page = {\n    prev,\n    next,\n  }[direction];\n\n  const button = {\n    prev: '«',\n    next: '»',\n  }[direction];\n\n  return (\n    <li\n      className={classNames('page-item', {\n        disabled: isAnEdgePage,\n      })}\n    >\n      <a\n        data-cy={`${direction}Link`}\n        className=\"page-link\"\n        href={`#${direction}`}\n        aria-disabled={isAnEdgePage}\n        onClick={() => {\n          if (!isAnEdgePage) {\n            onPageChange(page);\n          }\n        }}\n      >\n        {button}\n      </a>\n    </li>\n  );\n};\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\nimport { StepButton } from '../SetpButton/SetpButton';\n\ninterface Props {\n  total: number,\n  itemsPerPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nenum Direction {\n  Prev = 'prev',\n  Next = 'next',\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / itemsPerPage));\n\n  return (\n    <ul className=\"pagination\">\n      <StepButton\n        direction={Direction.Prev}\n        currentPage={currentPage}\n        pages={pages}\n        onPageChange={(page) => {\n          onPageChange(page);\n        }}\n      />\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <StepButton\n        direction={Direction.Next}\n        currentPage={currentPage}\n        pages={pages}\n        onPageChange={(page) => {\n          onPageChange(page);\n        }}\n      />\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsToDisplay = items.slice(0, itemsPerPage);\n  const [visibleItems, setVisibleItems] = useState(itemsToDisplay);\n\n  const totalItems = items.length;\n  const startItem = currentPage * itemsPerPage - itemsPerPage + 1;\n  const endItem = Math.min(totalItems, currentPage * itemsPerPage);\n\n  useEffect(() => {\n    const newItems = items.slice(\n      (currentPage - 1) * itemsPerPage,\n      currentPage * itemsPerPage,\n    );\n\n    setVisibleItems(newItems);\n  }, [currentPage, itemsPerPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage}`}\n        {` (items ${startItem} - ${endItem} `}\n        {`of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}